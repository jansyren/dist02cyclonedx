name: Manual Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64]
        include:
          - os: rocky-8
            container_image: 'rockylinux/rockylinux:8'
            cgo_enabled: 0
            package_format: rpm
          - os: rocky-9
            container_image: 'rockylinux/rockylinux:9'
            cgo_enabled: 0
            package_format: rpm
          - os: ubuntu-20.04
            container_image: 'ubuntu:20.04'
            cgo_enabled: 1
            package_format: deb
          - os: ubuntu-22.04
            container_image: 'ubuntu:22.04'
            cgo_enabled: 1
            package_format: deb
          - os: ubuntu-24.04
            container_image: 'ubuntu:24.04'
            cgo_enabled: 1
            package_format: deb

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.1'

      - name: Create custom .goreleaser.yml for this OS
        run: |
          cat > .goreleaser.yml << EOF
          version: 2
          
          builds:
            - id: dist02cyclonedx
              goos:
                - linux
              goarch:
                - amd64
              env:
                - CGO_ENABLED=${{ matrix.cgo_enabled }}
          
          nfpms:
            - id: dist02cyclonedx-${{ matrix.os }}
              package_name: dist02cyclonedx-${{ matrix.os }}
              maintainer: Jan Syren <jan.syren@gmail.com>
              license: "GPL-3.0"
              formats:
                - ${{ matrix.package_format }}
              bindir: /usr/local/bin
              contents:
                - src: spdx-data/spdx.schema.json_sample
                  dst: /var/lib/distro2go/spdx.schema.json
                - src: config/dist02cyclonedx.yaml
                  dst: /etc/dist02cyclonedx.yaml
          
          checksum:
            name_template: 'checksums-${{ matrix.os }}.txt'
          
          changelog:
            sort: asc
            filters:
              exclude:
                - '^docs:'
                - '^test:'
          EOF
          
          cat .goreleaser.yml

      - name: Set up QEMU
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-24.04'
        uses: docker/setup-qemu-action@v3

      - name: Run GoReleaser (Ubuntu)
        if: matrix.os == 'ubuntu-20.04' || matrix.os == 'ubuntu-22.04' || matrix.os == 'ubuntu-24.04'
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }}
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: ${{ matrix.cgo_enabled }}

      - name: Install GoReleaser in Rocky Container
        if: matrix.os == 'rocky-8' || matrix.os == 'rocky-9'
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.container_image }}
          options: --privileged --volume ${{ github.workspace }}:/go/src/app --workdir /go/src/app
          run: |
            yum install -y gcc go wget
            wget https://github.com/goreleaser/goreleaser/releases/download/v1.18.2/goreleaser_Linux_x86_64.tar.gz
            tar -xzf goreleaser_Linux_x86_64.tar.gz -C /usr/local/bin
            chmod +x /usr/local/bin/goreleaser
            go version
            goreleaser release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.BUILD_TOKEN }}
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: ${{ matrix.cgo_enabled }}

      - name: Archive artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist02cyclonedx-${{ matrix.os }}
          path: dist/*